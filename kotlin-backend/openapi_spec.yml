openapi: "3.0.0"
info:
  version: 3.0.0
  title: Stripe Transactions API
paths:
  /health:
    get:
      operationId: getHealth
      tags:
        - health
      description: |
        Endpoint used to verify connectivity.
      responses:
        200:
          description: Health OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
  /customer:
    post:
      operationId: createCustomer
      description: |
        Creates a customer.
      tags:
        - customers
      responses:
        201:
          description: Customer created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomerSuccessResponse'
  /customers:
    get:
      operationId: listCustomers
      tags:
        - customers
      responses:
        200:
          description: |
            A list of customers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomersSuccessResponse'
  /product:
    post:
      operationId: createProduct
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequestBody'
      responses:
        201:
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductSuccessResponse'
  /products:
    get:
      operationId: listProducts
      tags:
        - products
      responses:
        200:
          description: |
            A list of products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsSuccessResponse'
  /order:
    post:
      operationId: createOrder
      tags:
        - orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequestBody'
      responses:
        201:
          description: Order created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderSuccessResponse'
  /orders:
    get:
      operationId: listOrders
      tags:
        - orders
      responses:
        200:
          description: |
            A list of orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrdersSuccessResponse'
  /payment-intent:
    post:
      operationId: createPaymentIntent
      tags:
        - paymentIntents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentIntentRequestBody'
      responses:
        201:
          description: Payment intent created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePaymentIntentSuccessResponse'
  /payment-intents:
    get:
      operationId: listPaymentIntents
      tags:
        - paymentIntents
      responses:
        200:
          description: |
            A list of payment intents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPaymentIntentsSuccessResponse'
components:
  schemas:
    SuccessResponse:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
    ErrorResponse:
      type: object
      required:
        - error
        - msg
      properties:
        error:
          type: string
        msg:
          type: string
    CreateCustomerSuccessResponse:
      type: object
      required:
        - customerId
      properties:
        customerId:
          type: string
          format: uuid
    ListCustomersSuccessResponse:
      type: object
      required:
        - customers
      properties:
        customers:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                format: uuid
    CreateProductRequestBody:
      type: object
      required:
        - priceGbx
      properties:
        priceGbx:
          type: integer
          format: int64
    CreateProductSuccessResponse:
      type: object
      required:
        - productId
      properties:
        productId:
          type: string
          format: uuid
    ListProductsSuccessResponse:
      type: object
      required:
        - products
      properties:
        products:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                format: uuid
    CreateOrderRequestBody:
      type: object
      required:
        - customerId
        - products
      properties:
        customerId:
          type: string
          format: uuid
        products:
          type: array
          items:
            type: object
            required:
              - productId
            properties:
              productId:
                type: string
                format: uuid
    CreateOrderSuccessResponse:
      type: object
      required:
        - orderId
      properties:
        orderId:
          type: string
          format: uuid
    ListOrdersSuccessResponse:
      type: object
      required:
        - orders
      properties:
        orders:
          type: array
          items:
            type: object
            required:
              - orderId
              - customerId
              - products
            properties:
              orderId:
                type: string
                format: uuid
              customerId:
                type: string
                format: uuid
              products:
                type: array
                items:
                  type: object
                  required:
                    - productId
                    - paymentStatus
                  properties:
                    productId:
                      type: string
                      format: uuid
                    paymentStatus:
                      type: string
                      enum:
                        - Paid
                        - Unpaid
    CreatePaymentIntentSuccessResponse:
      type: object
      required:
        - paymentIntentId
      properties:
        paymentIntentId:
          type: string
          format: uuid
    CreatePaymentIntentRequestBody:
      type: object
      required:
        - orderId
        - amountGbx
      properties:
        orderId:
          type: string
          format: uuid
        amountGbx:
          type: integer
          format: int64
    ListPaymentIntentsSuccessResponse:
      type: object
      required:
        - paymentIntents
      properties:
        paymentIntents:
          type: array
          items:
            type: object
            required:
              - paymentIntentId
              - orderId
              - amountGbx
              - stripeId
            properties:
              paymentIntentId:
                type: string
                format: uuid
              orderId:
                type: string
                format: uuid
              amountGbx:
                type: integer
                format: int64
              stripeId:
                type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
